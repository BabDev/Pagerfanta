name: 'Run Tests'

on: [push, pull_request]

jobs:
  test-core:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Core - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, zip
          coverage: pcov

      - name: Install dependencies
        run: (cd lib/Core && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Core && vendor/bin/phpunit)

  test-doctrine-collections:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Doctrine Collections - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: (cd lib/Adapter/Doctrine/Collections && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Doctrine/Collections && vendor/bin/phpunit)

  test-doctrine-dbal:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Doctrine DBAL - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, pdo, pdo_sqlite, sqlite, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: (cd lib/Adapter/Doctrine/DBAL && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Doctrine/DBAL && vendor/bin/phpunit)

  test-doctrine-mongodb-odm:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Doctrine MongoDB ODM - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, mongodb, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: (cd lib/Adapter/Doctrine/MongoDBODM && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Doctrine/MongoDBODM && vendor/bin/phpunit)

  test-doctrine-orm:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Doctrine ORM - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, pdo, pdo_sqlite, sqlite, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: (cd lib/Adapter/Doctrine/ORM && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Doctrine/ORM && vendor/bin/phpunit)

  test-doctrine-phpcr-odm:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Doctrine PHPCR ODM - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, pdo, pdo_sqlite, sqlite, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: (cd lib/Adapter/Doctrine/PHPCRODM && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Doctrine/PHPCRODM && vendor/bin/phpunit)

  test-elastica:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        elastica: [^6.0, ^7.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            elastica: ^6.0
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false
        exclude:
          - php: 8.0
            elastica: ^6.0

    name: Elastica ${{ matrix.elastica }} - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: |
          (cd lib/Adapter/Elastica && composer require --no-update ruflin/elastica:${{ matrix.elastica }})
          (cd lib/Adapter/Elastica && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Elastica && vendor/bin/phpunit)

  test-solarium:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        solarium: [^5.0, ^6.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            solarium: ^5.0
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false
        exclude:
          - php: 8.0
            solarium: ^5.0

    name: Solarium ${{ matrix.solarium }} - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: |
          (cd lib/Adapter/Solarium && composer require --no-update solarium/solarium:${{ matrix.solarium }})
          (cd lib/Adapter/Solarium && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Adapter/Solarium && vendor/bin/phpunit)

  test-twig:
    needs: test-core
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.next-php }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.0]
        twig: [^1.35, ^2.5, ^3.0]
        composer-flags: ['--prefer-stable --prefer-dist']
        next-php: [false]
        include:
          - php: 7.4
            twig: ^1.35
            composer-flags: '--prefer-stable --prefer-dist --prefer-lowest'
            next-php: false

    name: Twig ${{ matrix.twig }} - PHP ${{ matrix.php }} - Composer ${{ matrix.composer-flags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: curl, iconv, mbstring, zip
          coverage: pcov

      - name: Patch Composer manifests
        run: |
          php .github/patch-packages.php

      - name: Install dependencies
        run: |
          (cd lib/Twig && composer require --no-update twig/twig:${{ matrix.twig }})
          (cd lib/Twig && composer update ${{ matrix.composer-flags }})

      - name: Execute tests
        run: (cd lib/Twig && vendor/bin/phpunit)
